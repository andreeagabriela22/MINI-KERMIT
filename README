		README

	In cadrul acestei teme, am implementat, pentru fiecare pachet cate o functie care trimite, respectiv primeste respectivul pachet. Functiile de trimitere ale pachetelor de tip 'S', 'F', 'D', 'Z' si 'B' sunt implementate in ksender, iar cele pentru trimiterea pachetelor 'Y' si 'N' sunt implementate in ksender. Pentru cazul functiilor de primire ale pachetelor este invers. In fiecare astfel de functie, informatia aflata in fiecare camp in parte este trimisa ca un sir de biti, crc se calculeaza pe tot mesajul, iar dupa calculul sau, campul alocat acestuia devine 0. 
	Apelul functiei sendMessageForSure asigura trimiterea pachetelor fara erori, in cazul in care un pachet s-a pierdut pe drum sau a fost trimis cu erori, pachetol este retrimis.
	Apelul functiei receiveMessageForSure asigura primirea pachetelor fara erori. Cand un pachet este primit se ia o variabila in care se pune valoarea crc-ului pentru pachetul primit, iar campul acestuia devine 0, se calculeaza din nou crc-ul pentru pachetul si se verifica daca este acelasi cu cel vechi. In cazul in care pechetul a fost primit cu erori, se trimite un mesaj NACK catre sender si se cere retrimiterea pachetului respectiv.
	Totodata, tebuie precizat faptul ca numarul de secventa SEQ, in sender este deglarat global cu valoarea 0, se incrementeaza cu 2 in cazul in care pachetul este trimis (cu erori sau fara) si ramane la vechea valoare in cazul in care pachetul s-a pierdut. In cazul receiver-ului, numarul de secventa este +1 fata de pachetul primit.
	In implementare, pachetele 'F', 'D' si 'Z' sunt trimise, respectiv primite cu totul, adica in main-ul celor 2 functii exista un singur apel catre o functie sendFile, respectiv receiveFile, deoarece in cazul in care este trimis un pachet 'F' sigur va urma un pachet 'D' si un pachet 'Z'. 
	
